<style>
    .container {
        flex: 1;
        min-height: 500px;
        margin-top: 5px;
        display: flex;
        flex-direction: column;
    }
</style>
<div class="ftl-paper container">
    <div id="train-viewer-content" style="display: none">
        <div style="flex: 1/4; display: flex;">
            <div class="ftl-flex-container" style="flex-direction: column; align-items: flex-start; width: 200px;">
                <h3 id="carName"></h3>
                <div id="train-viewer-icon" class="ftl-flex-container"
                    style="width: 100px; height: 100px; box-shadow: 0px 0px 6px rgba(0,0,0,0.5); border-radius: 8px">
                </div>

            </div>
        </div>
        <div style="margin-top: 10px;">
            <h2>Contents</h2>
            <div id="train-viewer-items"></div>
        </div>
    </div>
    <div id="train-viewer-no-content" style="flex: 1; display: flex; justify-content: center; align-items: center;">
        <h3>No Item Selected</h3>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const testFlatbed = train.AddTrainCar(Object.values(TrainCarTemplates)[2]);
        const testItem = Object.values(ItemTemplates)[Object.keys(ItemTemplates).indexOf("smallArms")][0];
        const testItem2 = Object.values(ItemTemplates)[Object.keys(ItemTemplates).indexOf("smallArms")][1];

        for (var i = 0; i < 5; i++) {
            train.AddItem(testItem);
            train.AddItem(testItem2);
        }

        testFlatbed.element.click(); // .. this will automatically trigger the "dispatchEvent" added by trainsFactory for when a train car is changed
    });

    function handleSelectedTrainCarChanged({detail: car}) {
        console.log("CHANGED TRAIN CAR: ", car);
        document.getElementById("train-viewer-no-content").style.display = car ? "none" : "inline";
        document.getElementById("train-viewer-content").style.display = car ? "inline" : "none";
        updateContent(car);
    }

    function updateContent(car) {
        updateIcon(car);
        document.getElementById("carName").innerHTML = car.DisplayName;

        updateItems(car);
    }

    function updateItems(car) {
        const trainViewerItems = document.getElementById("train-viewer-items");
        Array.from(trainViewerItems.children).map(child => {
            if (trainViewerItems.contains(child))
                child.parentElement.removeChild(child);
        })

        if (!car.Container)
            return;

        const containerItems = car.Container.Contents;
        const uniqueItems = [...new Set(containerItems)];
        const itemCounts = uniqueItems.map(i => containerItems.filter(ci => ci.DisplayName === i.DisplayName).length);

        uniqueItems.forEach((item, i) => {
            const itemButton = trainViewerItems.appendChild(document.createElement("button"));
            itemButton.className = "ftl-interact ftl-button";
            itemButton.style = "width: 72px; height: 72px; margin-right: 2px; text-align: center; vertical-align: middle; position: relative; padding-bottom: 10px";
            itemButton.onclick = () => {
                // .. unload the item
                if(train === undefined)
                    throw new DOMException("Train is undefined");

                train.RemoveItem(item,car);
                updateItems(car);
            }

            const itemImage = itemButton.appendChild(document.createElement("img"));
            itemImage.className = "ftl-icon ftl-noselect ftl-shippable-icon";
            itemImage.style.transform = "scale(150%)";
            itemImage["data-bs-toggle"] = "tooltip";
            itemImage["data-bs-placement"] = "top";
            itemImage.title = item.DisplayName;
            itemImage.src = item.IconName;

            const itemCountDiv = itemButton.appendChild(document.createElement("p"));
            itemCountDiv.style = "right: 0; position: absolute; padding-right: 5px";

            const itemCount = itemCountDiv.appendChild(document.createElement("p"));
            itemCount.innerHTML = "x" + itemCounts[i];
        })
    }

    function updateIcon(car) {
        const viewerIcon = document.getElementById("train-viewer-icon");

        Array.from(viewerIcon.children).map(child => {
            if (viewerIcon.contains(child))
                child.parentElement.removeChild(child);
        })

        const carImage = document.getElementById(car.id + "-car").cloneNode(true);

        const newDimensions = viewerIcon.style.width;

        carImage.id = carImage.id + Date.now();
        carImage.style.height = newDimensions;
        carImage.src = "./img/trains/" + car.Type + "Black.png";

        if (car.Type === "FlatbedCar")
            carImage.style.transform = "skew(5deg,5deg)";

        viewerIcon.appendChild(carImage);

        const carContainer = document.getElementById(car.id + "-container")?.cloneNode(true);

        if (carContainer === undefined)
            return;

        carContainer.id = carContainer.id + Date.now();
        carContainer.style.height = "auto";
        carContainer.style.width = newDimensions;
        carContainer.style.transform = "scale(90%)";
        carContainer.style.marginTop = "-30px";

        if(car.Container.Type === "LiquidContainer")
            carContainer.style.marginTop = "-50px";

        viewerIcon.appendChild(carContainer);
    }

    document.addEventListener("onSelectedTrainCarChanged",handleSelectedTrainCarChanged);
</script>