@using FoxholeTrainLogistics.Interfaces;
@using FoxholeTrainLogistics.Services;
@using System.Text.Json;
@using System.Text.Json.Serialization;
@{
    var serializerOptions = new JsonSerializerOptions() { Converters = { new JsonStringEnumConverter() } };
}
@model TrainViewModel

<!-- Import Train Creation Factory-->

<script src="~/js/train.js?v=-1"></script>
<script>
    var train;
    document.addEventListener('DOMContentLoaded', () => {
        const trainObj = @Html.Raw(JsonSerializer.Serialize(Model.Train,serializerOptions));
        train = new Train(trainObj, @Model.Interactable.ToString().ToLower());
    });    
</script>

<div class="ftl-paper" style="margin-bottom: 5px; min-height: 100px; display: flex; flex-direction: column">
    <span>@Model.Train.TrainId</span>

    <div id=@("train-container-"+Model.Train.TrainId)
        style="display: flex; vertical-align: middle; margin-top: 5px; margin-bottom: 5px; min-height: 50px"></div>

    <div class="btn-group" role="group">
        <button type="button" class="ftl-interact ftl-chip">@Model.NumberOfCars Cars</button>
        <button id=@("train-crew-"+Model.Train.TrainId) type="button" class="ftl-interact ftl-chip">
            Crew Capacity: 2
        </button>

        <button type="button" class="ftl-interact ftl-chip @Model.Train.Status.ToAlert()">Status: @Model.StatusDisplayName</button>
    </div>
</div>

@if (!Model.Interactable)
    return;


<div class="ftl-paper" style=" display: flex; min-height: 75px; width: fit-content; min-width: 500px">
    <div id=@("train-toolbar-"+Model.Train.TrainId) style=" display: flex; ">
        @foreach (ITrainCar car in TrainCarFactory.GetTrainCarTemplates())
        {
            <button class="ftl-noselect ftl-interact ftl-button" onclick="train.AddTrainCar({...@car});">
                <img class="ftl-icon" src="/img/trains/@(car.Image)?v=-1" data-bs-toggle="tooltip" data-bs-placement="top"
                title="@car.Type.DisplayName()" />
            </button>
        }
    </div>
</div>
