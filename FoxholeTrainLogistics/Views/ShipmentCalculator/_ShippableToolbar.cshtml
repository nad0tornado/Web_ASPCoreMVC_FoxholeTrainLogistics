@using FoxholeTrainLogistics.ViewModels;
@using FoxholeItemAPI.Interfaces;
@using FoxholeItemAPI.Converters;
@using FoxholeTrainLogistics.Services;
@using System.Text.Json;
@model ShippableToolbarViewModel

<head>
    <script src="~/js/shippableToolbar.js?v=-1"></script>
</head>

<script>
    var selectedFaction = Faction[2];
    var selectedCategory = '';

    localStorage.packageOption = PackageType[1];

    function onFactionChanged(faction) {
        const factionsToShow = faction !== 'neutral' ? [faction, 'neutral'] : Object.values(Faction);
        const elementsToShow = document.querySelectorAll(`.${factionsToShow.join(",.")}`);
        elementsToShow.forEach(e => e.style.display = "inline");

        const factionsToHide = faction !== 'neutral' ? Object.values(Faction).filter(f => f !== faction && f !== 'neutral') : [];
        const elementsToHide = factionsToHide.length > 0 ? document.querySelectorAll(`.${factionsToHide.join(",.")}`) : [];
        elementsToHide.forEach(e => e.style.display = "none");
    }

    onFactionChanged("neutral");
</script>

<div class="ftl-paper" style="min-width: 500px; min-height: 500px; max-width: fit-content; margin-top: 5px;">
    <ul class="nav nav-tabs" id="myTab" role="tablist">
        @{
        foreach (ShippableIconViewModel category in Model.ShippableCategories)
        {
                                            <li class="nav-item" role="presentation">
                                                <button class="nav-link @(Model.ShippableCategories.IndexOf(category)==3 ? " active" : "" )"
                                                    id="@category.Name-tab" data-bs-toggle="tab" data-bs-target="#@category.Name" type="button" role="tab"
                                                    aria-controls="@category.Name" aria-selected="true">
                                                    <img class="ftl-icon ftl-noselect ftl-shippable-icon" src="@category.ImagePath?v=-1"
                                                        data-bs-toggle="tooltip" data-bs-placement="top" title="@category.DisplayName" />
                                                </button>
                                            </li>
        }
        }
    </ul>
    <div class="tab-content" id="myTabContent" style="max-width: 750px; ">
        @{
        var shippableItems = await Model.GetShippableItems();

                                            <div style="display: flex;padding: 10px; ">
                                                <div id="factionRadios" style="flex: 1; display: flex; justify-content: center; align-items: center">
                                                    <div class="form-check form-check-inline">
                                                        <input class="form-check-input" type="radio" name="factionRadios" id="radio-colonial" value="0" />
                                                        <label class="form-check-label" for="radio-colonial">Colonial</label>
                                                    </div>
                                                    <div class="form-check form-check-inline">
                                                        <input class="form-check-input" type="radio" name="factionRadios" id="radio-warden" value="1" />
                                                        <label class="form-check-label" for="radio-warden">Warden</label>
                                                    </div>
                                                    <div class="form-check form-check-inline">
                                                        <input class="form-check-input" type="radio" name="factionRadios" id="radio-neutral" value="2"
                                                            checked />
                                                        <label class="form-check-label" for="radio-neutral">Neutral</label>
                                                    </div>
                                                    <script>
                                                        var radioGroup = document.getElementById("factionRadios");

                                                        radioGroup.addEventListener("change", function ({ target: { value } }) {
                                                            onFactionChanged(Faction[value]);
                                                        });
                                                    </script>
                                                </div>

                                                <div id="packageRadios" style="flex: 1;  display: flex; justify-content: center; align-items: center">
                                                    <div class="form-check form-check-inline">
                                                        <input class="form-check-input" type="radio" name="packageRadios" id="radio-mpf-crate" value="1"
                                                            checked />
                                                        <label class="form-check-label" for="radio-mpf-crate">MPF Crate</label>
                                                    </div>
                                                    <div class="form-check form-check-inline">
                                                        <input class="form-check-input" type="radio" name="packageRadios" id="radio-single-packaged"
                                                            value="0" />
                                                        <label class="form-check-label" for="radio-single-packaged">Single Packaged</label>
                                                    </div>
                                                    <script>
                                                        var radioGroup = document.getElementById("packageRadios");

                                                        radioGroup.addEventListener("change", function ({ target: { value } }) {
                                                            localStorage.packageOption = PackageType[value];
                                                        });
                                                    </script>
                                                </div>


                                            </div>

        foreach (ShippableIconViewModel category in Model.ShippableCategories)
        {
                                            <div class="tab-pane fade @(Model.ShippableCategories.IndexOf(category)==3 ? " show active" : "" )"
                                                id="@category.Name" role="tabpanel" aria-labelledby="@category.Name-tab">
                                                @{
            var categoryItems = shippableItems[category.Name];


            foreach (IItem item in categoryItems)
            {
                                                                                    <button class="ftl-interact ftl-button @item.Faction.ToString().ToLower()"
                                                                                        style="width: 72px; height: 72px; margin-right: -2px; text-align: center; vertical-align: middle;"
                                                                                        onclick="train.LoadItem(@(item.ToString()));">
                                                                                        <img class="ftl-icon ftl-noselect ftl-shippable-icon" src="@item.IconName?v=-1"
                                                                                            style="padding: 0px; background-color: @(item.DisplayName == " UNKNOWN ITEM" ? "red" : "transparent"
                                                                                            ); transform: scale(150%);" data-bs-toggle="tooltip" data-bs-placement="top"
                                                                                            title="@item.DisplayName" />
                                                                                    </button>
            }
                                                }
                                            </div>
        }

        }
    </div>
</div>