@{
    var datePickerId = Guid.NewGuid();
}

<head>
    <style>
        .ftl-date-picker {
            user-select: none;
            -webkit-user-drag: none;
            display: flex;
            flex-direction: column;
            box-shadow: 2px 2px 6px rgba(0,0,0,0.5);
            padding: 2px;
            width: fit-content;
            border-radius: 8px;
            justify-content: center;
            align-items: center;
            overflow: hidden;
            position: absolute;
            z-index: 100;
        }

        .dropdown {
            animation-name: dropDown;
            animation-duration: 0.2s;
            animation-fill-mode: forwards;
        }

        .dropup {
            animation-name: dropUp;
            animation-duration: 0.2s;
            animation-fill-mode: forwards;
        }

        .ftl-date-picker .ftl-dp-cell {
            width: 40px;
            height: 40px;
            text-align: center;
            background: white;
            box-sizing: border-box;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .ftl-date-picker button {
            border: none;
            
        }

        .ftl-date-picker button:hover {
            filter: brightness(115%);
        }

        .ftl-date-picker button:active {
            filter: none;
        }

        .ftl-dp-bright-button {
            background: none;
            color: white;
        }

        .ftl-dp-bright-button:hover {
            color: silver;
        }

        
    </style>
    <script src="https://kit.fontawesome.com/9d5c7d3cb0.js" crossorigin="anonymous"></script>
    <script>
        const months = [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December"
        ];

        var now = new Date(Date.now());
        var selectedMonthIndex = now.getMonth();
        var selectedYear = now.getFullYear();

        var canOpen = true;

        // .. these probably need to be in a class so we know which datepicker instance to refer to
        function openCalendar() {
            const element = document.getElementById("ftl-date-picker-@datePickerId");
            element.focus();
            element.classList.remove("dropup");
            element.classList.add("dropdown");
            element.style.display = "inline";

            selectedYear = now.getFullYear();
            selectedMonthIndex = now.getMonth();
            updateCalendar();
        }

        function closeCalendar() {
            const element = document.getElementById("ftl-date-picker-@datePickerId");
            element.classList.remove("dropdown");
            element.classList.add("dropup");
            setTimeout(() => {
                canOpen = true;
            }, 100);
        }

        function handleDateChanged(day,month,year) {
            const date = new Date(year, month, day);
            const dateString = date.toLocaleDateString('en-GB', {
                day: '2-digit',
                month: '2-digit',
                year: '2-digit'
            })

            const dateInput = document.getElementById("ftl-dp-input-@datePickerId");
            dateInput.value = dateString;
            canOpen = false;
            closeCalendar();
        }

        window.addEventListener("DOMContentLoaded",() => {
            
            const datePickerGrid = document.getElementById("ftl-dp-grid-@datePickerId");
            for(var i = 0; i < 6; i++)
            {
                const weekRow = document.createElement("div");
                weekRow.style.display = "flex";
                datePickerGrid.appendChild(weekRow);

                for(var j = 0; j < 7; j++)
                {
                    const dayCell = document.createElement("button");
                    dayCell.id=`ftl-dp-day-${i}${j}-@datePickerId`;
                    dayCell.className = "ftl-dp-cell";
                    dayCell.innerHTML = `0${j}`;
                    dayCell.onclick = () => {
                        handleDateChanged(dayCell.innerHTML,dayCell.month,dayCell.year);
                    }
                    weekRow.appendChild(dayCell);
                }
            }

            const inputElement = document.getElementById("ftl-dp-input-@datePickerId");
            const datePickerContainer = document.getElementById("ftl-dp-container-@datePickerId");

            document.addEventListener('click', function (event) {
                if (!datePickerContainer.contains(event.target)) {
                    closeCalendar();
                }
                else if (canOpen) {
                    openCalendar();
                    canOpen = false;
                }
            });

            updateCalendar();
        })

        function updateCalendar() {
            document.getElementById("ftl-dp-monthname-@datePickerId").innerHTML = months[selectedMonthIndex];
            document.getElementById("ftl-dp-year-@datePickerId").innerHTML = selectedYear;

            const monthDays = getMonthDays(selectedMonthIndex,selectedYear);
            const monthStartWeekday = getMonthStartWeekday(selectedMonthIndex, selectedYear);

            const lastMonthIndex = selectedMonthIndex == 0 ? 11 : selectedMonthIndex - 1;
            const lastMonthIsLastYear = selectedMonthIndex == 0;
            const lastMonthEndWeekday = getMonthEndWeekday(lastMonthIndex, selectedYear);
            const lastMonthDays = getMonthDays(lastMonthIndex, selectedYear);

            const nextMonthIndex = selectedMonthIndex == 11 ? 0 : selectedMonthIndex + 1;
            const nextMonthIsNextYear = selectedMonthIndex == 11;
            const nextMonthDays = getMonthDays(nextMonthIndex, selectedYear);

            const datePickerGrid = document.getElementById("ftl-dp-grid-@datePickerId");

            // .. we need to take into account different years as well (explains why January's days are messed up)
            for (var week = 0; week < 6; week++) {
                const weekRow = datePickerGrid.children[week];
                for (var weekday = 0; weekday < 7; weekday++) {
                    const cell = weekRow.children[weekday];
                    const monthDay = (week * 7) + weekday + 1 - monthStartWeekday;
                    if (week == 0 && weekday < monthStartWeekday) {
                        cell.innerHTML = lastMonthDays - (lastMonthEndWeekday - weekday);
                        cell.style.fontWeight = "bold";
                        cell.month = lastMonthIndex;
                        cell.year = lastMonthIsLastYear ? selectedYear-1 : selectedYear;
                    }
                    else if (monthDay < monthDays+1) {
                        cell.innerHTML = monthDay;
                        cell.style.fontWeight = "normal";

                        const cellDate = new Date(selectedYear, selectedMonthIndex, monthDay);

                        if(cellDate.getDate() === now.getDate())
                        {
                            cell.style.background = "#0D6EFF";
                            cell.style.color = "white";
                        }
                        else
                        {
                            cell.style.background = "";
                            cell.style.color = "";
                        }

                        cell.month = selectedMonthIndex;
                        cell.year = selectedYear;
                    }
                    else {
                        cell.innerHTML = monthDay-monthDays;
                        cell.style.fontWeight = "bold";
                        cell.month = nextMonthIndex;
                        cell.year = nextMonthIsNextYear ? selectedYear + 1 : selectedYear;
                    }
                }
            }
        }

        function getMonthDays(monthIndex,year = undefined) {
            const now = new Date(Date.now());
            return new Date(year ?? now.getFullYear(), monthIndex + 1, 0).getDate();
        }

        function getMonthStartWeekday(monthIndex, year = undefined) {
            const now = new Date(Date.now());
            return new Date(year ?? now.getFullYear(), monthIndex, 1).getDay();
        }

        function getMonthEndWeekday(monthIndex, year = undefined) {
            const now = new Date(Date.now());
            const monthDays = getMonthDays(monthIndex,year);
            return new Date(year ?? now.getFullYear(), monthIndex, monthDays).getDay();
        }

        function gotoPrevMonth() {
            if(selectedMonthIndex > 0)
                selectedMonthIndex--;
            else
            {
                selectedMonthIndex = 11;
                selectedYear--;
            }

            updateCalendar();
        }

        function gotoNextMonth() {
            if (selectedMonthIndex < 11)
                selectedMonthIndex++;
            else
            {
                selectedMonthIndex = 0;
                selectedYear++;
            }

            updateCalendar();
        }

        function gotoPrevYear() {
            selectedYear--;
            updateCalendar();
        }

        function gotoNextYear() {
            selectedYear++;
            updateCalendar();
        }

    </script>
</head>

<div id="ftl-dp-container-@datePickerId" style="width: 250px; margin-left: 10px;">
<label for="shipment-date">Shipment Date</label>
<input type="text" class="form-control" id="ftl-dp-input-@datePickerId" aria-describedby="basic-addon3" onchange="validateForm()">
    <div class="ftl-date-picker" id="ftl-date-picker-@datePickerId" style="display: none" >
    <div style="display: flex; flex-direction: column; background: #0D6EFF; color: white; width: 100%; border-top-left-radius: 8px; border-top-right-radius: 8px">
        <div style="display: flex; justify-content: space-evenly; align-items: center;">
            <button class="ftl-dp-bright-button" onclick="gotoPrevMonth()" style="color">
                <i class="fa-solid fa-backward"></i>
            </button>
            <div style="min-width: 150px; text-align: center"><h4 id="ftl-dp-monthname-@datePickerId"></h4></div>
            <button class="ftl-dp-bright-button" onclick="gotoNextMonth()">
                <i class="fa-solid fa-forward"></i>
            </button>
        </div>
        <div style="display: flex; justify-content: space-evenly; align-items: center;">
            <button class="ftl-dp-bright-button" onclick="gotoPrevYear()" style="color">
                <i class="fa-solid fa-backward"></i>
            </button>
                <div id="ftl-dp-year-@datePickerId" style="display: flex; justify-content: center; align-items: center;"></div>
                <button class="ftl-dp-bright-button" onclick="gotoNextYear()">
                    <i class="fa-solid fa-forward"></i>
                </button>
            
        </div>
    </div>
    <div style="display: flex; font-weight: bold">
        <div class="ftl-dp-cell">Su</div>
        <div class="ftl-dp-cell">Mo</div>
        <div class="ftl-dp-cell">Tu</div>
        <div class="ftl-dp-cell">We</div>
        <div class="ftl-dp-cell">Th</div>
        <div class="ftl-dp-cell">Fr</div>
        <div class="ftl-dp-cell">Sa</div>
    </div>
    <div id="ftl-dp-grid-@datePickerId" class="ftl-dp-grid"></div>
</div>
</div>
