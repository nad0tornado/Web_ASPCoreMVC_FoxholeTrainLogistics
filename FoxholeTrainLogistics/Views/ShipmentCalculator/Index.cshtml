@using FoxholeTrainLogistics.Interfaces;
@using FoxholeTrainLogistics.Services;
@using FoxholeTrainLogistics.ViewModels;
@inject IShippableToolbarService ShippableToolbarService;
@{
    ViewData["Title"] = "Shipment Calculator";
}

@{
    await Html.RenderPartialAsync("_TrainsUtils");
}

<script>
    @{
        var train = new Train()
        {
            TrainId = Guid.NewGuid(),
            Cars = new List<ITrainCar>() {
            TrainCarFactory.CreateTrainCar(TrainCarType.EngineCar),
            TrainCarFactory.CreateTrainCar(TrainCarType.CoalCar)
        },
                Status = TrainStatus.Parked
        };
    }
</script>

<h1>Shipment Calculator</h1>

<div>
    <b>Your Train</b>
    @{await Html.RenderPartialAsync("../Trains/_Train", new TrainViewModel(train,true));}
</div>
@{await Html.RenderPartialAsync("./_ShippableToolbar", new ShippableToolbarViewModel(ShippableToolbarService));}

